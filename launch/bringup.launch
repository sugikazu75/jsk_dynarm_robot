<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="type" default="quad" />
  <arg name="onboards_model" default="euclid_201709" />
  <arg name="estimate_mode"  default= "1" />
  <arg name="sim_estimate_mode"  default= "2" />
  <arg name="headless" default="True" />
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/empty.world" />
  <arg name="launch_gazebo" default="True" />
  <arg name="direct_model" default="False" />
  <arg name="direct_model_name" />
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="1.5"/>
  <arg name="spawn_yaw" default="0.0"/>
  <arg name="robot_id" default="" />
  <arg name="robot_ns" value="dragon$(arg robot_id)" />
  <arg name="config_dir" default="$(find dragon)/config/$(arg type)" />
  <arg name="mujoco" default="False" />

  ###########  UAV Config  ###########
  <group ns="$(arg robot_ns)">

    ###########  Basic Param  ###########
    <param name="estimation/mode" value= "$(arg sim_estimate_mode)" if="$(arg simulation)" />
    <param name="estimation/mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>

    # DRAGON = 32 # 0x20, for dual rotor
    <param name="uav_model" value= "32" />
    <rosparam file="$(find dynarm)/config/ManipulatorModel.yaml" command="load"/>

    ###########  Motor Config  ###########
    <rosparam file="$(find dragon)/config/MotorInfo.yaml" command="load" />

    ###########  Servo Config  ###########
    <rosparam file="$(find dynarm)/config/Servo.yaml" command="load" />

    ###########  Battery Config  ###########
    <rosparam file="$(arg config_dir)/Battery.yaml" command="load" />

    ###########  Sensor Fusion  ###########
    <rosparam file="$(find dynarm)/config/StateEstimation.yaml" command="load"/>
    <rosparam file="$(arg config_dir)/Simulation.yaml" command="load" if="$(eval arg('simulation') and not arg('real_machine'))"/>

    ###########  Control  ###########
    <rosparam file="$(find dynarm)/config/ManipulatorControl.yaml" command="load"/>

    ###########  robot description for pinocchio ###########
    <param name="pinocchio_robot_description" command="$(find xacro)/xacro $(find dragon)/robots/$(arg type)/$(arg onboards_model).urdf.xacro rotor_fixed:=true"/>
  </group>

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" ns="$(arg robot_ns)" output="screen">
    <param name="tf_prefix" value="$(arg robot_ns)"/>
    <param name="param_verbose" value="false"/>
    <param name="main_rate" value="100"/>
  </node>

  ###########  Robot Model  ###########
  <arg name="description_mode" value="urdf" unless="$(arg simulation)" />
  <arg name="description_mode" value="gazebo" if="$(arg simulation)" />
  <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch" >
    <arg name="headless" value="$(arg headless)" />
    <arg name="robot_model" value="$(find dragon)/robots/$(arg type)/$(arg onboards_model).$(arg description_mode).xacro" unless="$(arg direct_model)"/>
    <arg name="robot_ns" value="$(arg robot_ns)" />
    <arg name="rviz_config" value="$(find dragon)/config/rviz_config" />
    <arg name="rviz_init_pose" value="$(arg config_dir)/RvizInit.yaml" />
    <arg name="need_joint_state" value="false" if ="$(eval arg('simulation') or arg('real_machine'))"/>
  </include >

  ###########  Sensors  ###########
  <include file="$(find dragon)/launch/includes/$(arg onboards_model)/sensors.launch.xml" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
    <arg name="robot_ns" value="$(arg robot_ns)" />
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="aerial_robot_model" type="servo_bridge_node" name="servo_bridge"  output="screen" ns="$(arg robot_ns)">
    <param name="use_mujoco" value="true" if="$(arg mujoco)"/>
  </node>

  ########### Fix root link to world ###########
  <node pkg="dynarm" type="root_fix.py" name="root_fix_node"/>

  ########## Simulation in Gazebo #########
  <include file="$(find aerial_robot_simulation)/launch/gazebo.launch" if = "$(eval arg('simulation') and not arg('real_machine') and not arg('mujoco'))" >
    <arg name="robot_ns" default="$(arg robot_ns)" />
    <arg name="gui" default="false" if="$(arg headless)" />
    <arg name="headless" default="$(arg headless)" />
    <arg name="launch_gazebo" default="$(arg launch_gazebo)" />
    <arg name="worldtype" value="$(arg worldtype)" />
    <arg name="spawn_x" value="$(arg spawn_x)" />
    <arg name="spawn_y" value="$(arg spawn_y)" />
    <arg name="spawn_z" value="$(arg spawn_z)" />
    <arg name="spawn_yaw" value="$(arg spawn_yaw)" />
  </include>

</launch>
